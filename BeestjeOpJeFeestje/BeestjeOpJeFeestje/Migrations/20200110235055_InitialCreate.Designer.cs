// <auto-generated />
using System;
using BeestjeOpJeFeestje.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeestjeOpJeFeestje.Migrations
{
    [DbContext(typeof(BeestjeOpJeFeestjeContext))]
    [Migration("20200110235055_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BeestjeOpJeFeestje.Models.Accessories", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PicturePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Accessories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Strikje",
                            PicturePath = "/images/accessories/Picture 1.png",
                            Price = 15.0
                        },
                        new
                        {
                            ID = 2,
                            Name = "Strikje Rood",
                            PicturePath = "/images/accessories/Picture 2.png",
                            Price = 15.0
                        },
                        new
                        {
                            ID = 3,
                            Name = "Hoge Hoed",
                            PicturePath = "/images/accessories/Picture 3.png",
                            Price = 30.0
                        },
                        new
                        {
                            ID = 4,
                            Name = "Kerstmuts",
                            PicturePath = "/images/accessories/Picture 4.png",
                            Price = 25.0
                        },
                        new
                        {
                            ID = 5,
                            Name = "Maracas",
                            PicturePath = "/images/accessories/Picture 5.png",
                            Price = 10.0
                        },
                        new
                        {
                            ID = 6,
                            Name = "Hamer",
                            PicturePath = "/images/accessories/Picture 6.png",
                            Price = 3.0
                        },
                        new
                        {
                            ID = 7,
                            Name = "Vleugels",
                            PicturePath = "/images/accessories/Picture 7.png",
                            Price = 40.0
                        },
                        new
                        {
                            ID = 8,
                            Name = "Afro Haar",
                            PicturePath = "/images/accessories/Picture 8.png",
                            Price = 30.0
                        },
                        new
                        {
                            ID = 9,
                            Name = "Wandelstok",
                            PicturePath = "/images/accessories/Picture 9.png",
                            Price = 15.0
                        },
                        new
                        {
                            ID = 10,
                            Name = "Bot",
                            PicturePath = "/images/accessories/Picture 10.png",
                            Price = 1.0
                        },
                        new
                        {
                            ID = 11,
                            Name = "Hengels",
                            PicturePath = "/images/accessories/Picture 11.png",
                            Price = 25.0
                        });
                });

            modelBuilder.Entity("BeestjeOpJeFeestje.Models.Animal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PicturePath")
                        .HasColumnName("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("ID");

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("BeestjeOpJeFeestje.Models.AnimalAccessories", b =>
                {
                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int>("AccessoriesId")
                        .HasColumnType("int");

                    b.HasKey("AnimalId", "AccessoriesId");

                    b.HasIndex("AccessoriesId");

                    b.ToTable("AnimalAccessories");
                });

            modelBuilder.Entity("BeestjeOpJeFeestje.Models.Booking", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("BeestjeOpJeFeestje.Models.BookingAnimal", b =>
                {
                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.HasKey("AnimalId", "BookingId");

                    b.HasIndex("BookingId");

                    b.ToTable("BookingAnimal");
                });

            modelBuilder.Entity("BeestjeOpJeFeestje.Models.AnimalAccessories", b =>
                {
                    b.HasOne("BeestjeOpJeFeestje.Models.Accessories", "Accessories")
                        .WithMany("AnimalAccessories")
                        .HasForeignKey("AccessoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeestjeOpJeFeestje.Models.Animal", "Animal")
                        .WithMany("AnimalAccessories")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeestjeOpJeFeestje.Models.BookingAnimal", b =>
                {
                    b.HasOne("BeestjeOpJeFeestje.Models.Animal", "Animal")
                        .WithMany("BookingAnimal")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeestjeOpJeFeestje.Models.Booking", "Booking")
                        .WithMany("BookingAnimals")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
